{"version":3,"sources":["reducers/modal.js","reducers/index.js","reducers/lists.js","actionTypes.js","actions/index.js","components/CardModal.js","components/CreateForm.js","components/Card.js","components/List.js","components/App.js","index.js"],"names":["def","isShowing","combineReducers","lists","state","action","type","id","name","cards","filter","list","map","listId","cardId","card","description","payload","startingListId","endingListId","startingIndex","endingIndex","newState","splice","listStart","find","listEnd","modal","hideModal","CardModal","isInserting","inputValue","props","toggleInserting","setState","handleSubmit","event","preventDefault","editCardDescription","onDeleteClick","deleteCard","onCloseClick","this","input","focus","onSubmit","className","onClick","e","stopPropagation","onChange","target","value","ref","el","onBlur","placeholder","renderDescription","React","Component","connect","error","console","log","create_UUID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","CreateForm","create","formType","scrollIntoView","block","inline","onMouseDown","typeToCreate","createList","createCard","Card","draggableId","index","innerRef","draggableProps","dragHandleProps","showModal","List","key","provided","deleteList","droppableId","droppableProps","renderCards","ownProps","Modal","setAppElement","App","onDragEnd","result","destination","source","editCardPosition","direction","renderLists","isOpen","isModalShowing","onRequestClose","contentLabel","overlayClassName","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74d78e06.chunk.js","sourcesContent":["import { SHOW_MODAL, HIDE_MODAL } from \"../actionTypes\";\n\nconst def = { isShowing: false };\n// action: cardId, listId\nexport default (state = def, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return { isShowing: true, ...action };\n    case HIDE_MODAL:\n      return { ...state, isShowing: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport lists from \"./lists\";\nimport modal from \"./modal\";\n\nexport default combineReducers({\n  lists,\n  modal\n});\n","import {\n  CREATE_LIST, // id, name\n  DELETE_LIST, // id\n  EDIT_LIST_NAME, // id, name\n  CREATE_CARD, // cardId, listId, name\n  DELETE_CARD, // cardId, listId\n  EDIT_CARD_DESCRIPTION, // cardId, listId, description\n  EDIT_CARD_NAME, // cardId, listId, name\n  EDIT_CARD_POSITION // cardId, startingListId, endingListId, startingIndex, endingIndex\n} from \"../actionTypes\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case CREATE_LIST:\n      return [...state, { id: action.id, name: action.name, cards: [] }];\n    case DELETE_LIST:\n      return state.filter(list => list.id !== action.id);\n    case EDIT_LIST_NAME:\n      return state.map(list =>\n        list.id === action.id ? { ...list, name: action.name } : list\n      );\n    case CREATE_CARD:\n      return state.map(list => {\n        return list.id === action.listId\n          ? {\n              ...list,\n              cards: [...list.cards, { id: action.cardId, name: action.name }]\n            }\n          : list;\n      });\n    case DELETE_CARD:\n      return state.map(list =>\n        list.id === action.listId\n          ? {\n              ...list,\n              cards: list.cards.filter(card => card.id !== action.cardId)\n            }\n          : list\n      );\n    case EDIT_CARD_DESCRIPTION:\n      return state.map(list => {\n        if (list.id === action.listId) {\n          return {\n            ...list,\n            cards: list.cards.map(card =>\n              card.id === action.cardId\n                ? { ...card, description: action.description }\n                : card\n            )\n          };\n        } else {\n          return list;\n        }\n      });\n    case EDIT_CARD_NAME:\n      return state.map(list => {\n        if (list.id === action.listId) {\n          return {\n            ...list,\n            cards: list.cards.map(card =>\n              card.id === action.cardId\n                ? { ...card, name: action.description }\n                : card\n            )\n          };\n        } else {\n          return list;\n        }\n      });\n    case EDIT_CARD_POSITION:\n      const {\n        startingListId,\n        endingListId,\n        startingIndex,\n        endingIndex,\n        type\n      } = action.payload;\n      const newState = [...state];\n      if (type === \"list\") {\n        const list = newState.splice(startingIndex, 1);\n        newState.splice(endingIndex, 0, ...list);\n        return newState;\n      }\n      const listStart = state.find(list => list.id === startingListId);\n      const card = listStart.cards.splice(startingIndex, 1);\n      const listEnd = state.find(list => list.id === endingListId);\n      listEnd.cards.splice(endingIndex, 0, ...card);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n","export const CREATE_LIST = \"CREATE_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\nexport const EDIT_LIST_NAME = \"EDIT_LIST_NAME\";\n\nexport const CREATE_CARD = \"CREATE_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const EDIT_CARD_DESCRIPTION = \"EDIT_CARD_DESCRIPTION\";\nexport const EDIT_CARD_NAME = \"EDIT_CARD_NAME\";\nexport const EDIT_CARD_POSITION = \"EDIT_CARD_POSITION\";\n\nexport const SHOW_MODAL = \"SHOW_MODAL\";\nexport const HIDE_MODAL = \"HIDE_MODAL\";\n","import {\n  CREATE_LIST,\n  DELETE_LIST,\n  EDIT_LIST_NAME,\n  CREATE_CARD,\n  DELETE_CARD,\n  EDIT_CARD_DESCRIPTION,\n  EDIT_CARD_NAME,\n  EDIT_CARD_POSITION,\n  SHOW_MODAL,\n  HIDE_MODAL\n} from \"../actionTypes\";\n\nexport const createList = (id, name) => {\n  return {\n    type: CREATE_LIST,\n    id,\n    name\n  };\n};\n\nexport const deleteList = id => {\n  return {\n    type: DELETE_LIST,\n    id\n  };\n};\n\nexport const editListName = (id, name) => {\n  return {\n    type: EDIT_LIST_NAME,\n    id,\n    name\n  };\n};\n\nexport const createCard = (cardId, name, listId) => {\n  return {\n    type: CREATE_CARD,\n    cardId,\n    name,\n    listId\n  };\n};\n\nexport const deleteCard = (cardId, listId) => {\n  return {\n    type: DELETE_CARD,\n    cardId,\n    listId\n  };\n};\n\nexport const editCardDescription = (cardId, listId, description) => {\n  return {\n    type: EDIT_CARD_DESCRIPTION,\n    cardId,\n    listId,\n    description\n  };\n};\n\nexport const editCardName = (cardId, listId, name) => {\n  return {\n    type: EDIT_CARD_NAME,\n    cardId,\n    listId,\n    name\n  };\n};\n\nexport const showModal = (cardId, listId) => {\n  return {\n    type: SHOW_MODAL,\n    cardId,\n    listId\n  };\n};\n\nexport const hideModal = () => {\n  return {\n    type: HIDE_MODAL\n  };\n};\n\n// createList = (id, name)\n// createCard = (cardId, name, listId)\n\nexport const create = (typeToCreate, name, listId, cardId) => {\n  return typeToCreate === \"list\"\n    ? createList(listId, name)\n    : createCard(cardId, name, listId);\n};\n\nexport const editCardPosition = (\n  startingListId,\n  endingListId,\n  startingIndex,\n  endingIndex,\n  type\n) => {\n  return {\n    type: EDIT_CARD_POSITION,\n    payload: {\n      startingListId,\n      endingListId,\n      startingIndex,\n      endingIndex,\n      type\n    }\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { editCardDescription, hideModal, deleteCard } from \"../actions\";\n\nclass CardModal extends React.Component {\n  state = { isInserting: false, inputValue: this.props.description };\n\n  componentDidUpdate() {\n    if (this.state.isInserting) {\n      this.input.focus();\n    }\n  }\n\n  toggleInserting = () => {\n    this.setState({ isInserting: !this.state.isInserting });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //editCardDescription = (cardId, listId, description)\n    const { cardId, listId } = this.props;\n    this.props.editCardDescription(cardId, listId, this.state.inputValue);\n    this.toggleInserting();\n  };\n  renderDescription() {\n    if (this.state.isInserting) {\n      return (\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"desc-form\"\n          onClick={e => e.stopPropagation()}\n        >\n          <textarea\n            onSubmit={this.handleSubmit}\n            onChange={e => this.setState({ inputValue: e.target.value })}\n            value={this.state.inputValue}\n            ref={el => (this.input = el)}\n            onBlur={this.handleSubmit}\n            className=\"description--input\"\n            type=\"text\"\n            placeholder={\n              this.props.description || \"Add a more detailed description...\"\n            }\n          />\n          <input value=\"Save\" type=\"submit\" className=\"button desc-button\" />\n        </form>\n      );\n    } else {\n      return (\n        <p className=\"description\" onClick={this.toggleInserting}>\n          {this.props.description || \"Add a more detailed description...\"}\n        </p>\n      );\n    }\n  }\n  onDeleteClick = () => {\n    this.props.hideModal();\n    const { cardId, listId } = this.props;\n    // deleteCard = (cardId, listId)\n    this.props.deleteCard(cardId, listId);\n  };\n  onCloseClick = () => {\n    this.props.hideModal();\n  };\n  render() {\n    return (\n      <>\n        <div className=\"modal-header\">\n          <h2 className=\"card-name\">{this.props.name}</h2>\n          <div className=\"icons\">\n            <button className=\"button-icon\" onClick={this.onDeleteClick}>\n              <i className=\"fas fa-trash fa-2x\"></i>\n            </button>\n            <button className=\"button-icon\" onClick={this.onCloseClick}>\n              <i className=\"fas fa-times fa-2x\"></i>\n            </button>\n          </div>\n        </div>\n        <div className=\"content\">\n          <h3 className=\"small-header\">Description</h3>\n          {this.renderDescription()}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { listId, cardId } = state.modal;\n  try {\n    const { name, description } = state.lists\n      .find(list => list.id === listId)\n      .cards.find(card => card.id === cardId);\n    return { name, description, cardId, listId };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  { editCardDescription, hideModal, deleteCard }\n)(CardModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { create } from \"../actions\";\n\nfunction create_UUID() {\n  let dt = new Date().getTime();\n  let uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n    c\n  ) {\n    let r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\n// passed through props: formType, Optional: listId\nclass CreateForm extends React.Component {\n  state = { isInserting: false, inputValue: \"\" };\n\n  toggleInserting = () => {\n    this.setState({ isInserting: !this.state.isInserting });\n  };\n\n  componentDidUpdate() {\n    if (this.state.isInserting) {\n      this.input.focus();\n      if (this.props.formType === \"list\") {\n        this.input.scrollIntoView({ block: \"center\", inline: \"start\" });\n      }\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.inputValue) {\n      // create(typeToCreate, name, listId, cardId)\n      this.props.create(\n        this.props.formType,\n        this.state.inputValue,\n        this.props.listId || create_UUID(),\n        create_UUID()\n      );\n      this.setState({ inputValue: \"\" });\n    }\n  };\n\n  render() {\n    if (!this.state.isInserting) {\n      return (\n        <button className=\"button-toggle\" onClick={this.toggleInserting}>\n          {`+ Add another ${this.props.formType}`}\n        </button>\n      );\n    } else {\n      return (\n        <form onSubmit={this.handleSubmit} className=\"create-form\">\n          <input\n            onChange={e => this.setState({ inputValue: e.target.value })}\n            value={this.state.inputValue}\n            ref={el => (this.input = el)}\n            onBlur={this.toggleInserting}\n            type=\"text\"\n            placeholder={`Enter ${this.props.formType} title...`}\n            className=\"input\"\n          />\n          <button\n            onMouseDown={this.handleSubmit}\n            className=\"button\"\n          >{`Add ${this.props.formType}`}</button>\n        </form>\n      );\n    }\n  }\n}\n\nexport default connect(\n  null,\n  { create }\n)(CreateForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showModal } from \"../actions\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\n// passed through props: listId, id, name, index\nclass Card extends React.Component {\n  //showModal = (cardId, listId)\n  render() {\n    return (\n      <Draggable draggableId={this.props.id} index={this.props.index}>\n        {({ innerRef, draggableProps, dragHandleProps }) => (\n          <div ref={innerRef} {...draggableProps} {...dragHandleProps}>\n            <p\n              onClick={() =>\n                this.props.showModal(this.props.id, this.props.listId)\n              }\n              className=\"card\"\n            >\n              {this.props.name}\n            </p>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { showModal }\n)(Card);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteList } from \"../actions\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport CreateForm from \"./CreateForm\";\nimport Card from \"./Card\";\n\n// passed through props: name, id, index\nclass List extends React.Component {\n  renderCards() {\n    if (this.props.cards) {\n      return this.props.cards.map(({ id, name }, index) => {\n        return (\n          <Card\n            key={id}\n            id={id}\n            name={name}\n            listId={this.props.id}\n            index={index}\n          />\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.id} index={this.props.index}>\n        {provided => (\n          <div\n            className=\"lists-item\"\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n            {...provided.dragHandleProps}\n          >\n            <div className=\"list-head\">\n              <h2 className=\"list-title\">{this.props.name}</h2>\n              <button\n                onClick={() => this.props.deleteList(this.props.id)}\n                className=\"button-icon\"\n              >\n                <i className=\"fas fa-trash\"></i>\n              </button>\n            </div>\n            <Droppable droppableId={this.props.id}>\n              {provided => (\n                <div\n                  className=\"cards\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {this.renderCards()}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <div className=\"create-card\">\n              <CreateForm formType=\"card\" listId={this.props.id} />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: state.lists.find(list => list.id === ownProps.id).cards\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { deleteList }\n)(List);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { hideModal, editCardPosition } from \"../actions\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport Modal from \"react-modal\";\nimport CardModal from \"./CardModal\";\nimport List from \"./List\";\nimport CreateForm from \"./CreateForm\";\n\nModal.setAppElement(\"#root\");\nclass App extends React.Component {\n  renderLists() {\n    if (this.props.lists) {\n      return this.props.lists.map(({ id, name }, index) => {\n        return <List key={id} id={id} name={name} index={index} />;\n      });\n    }\n  }\n  onDragEnd = result => {\n    const { destination, source, type } = result;\n    // startingListId, endingListId, startingIndex, endingIndex\n    if (!destination) {\n      return;\n    }\n    this.props.editCardPosition(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      type\n    );\n  };\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"container\">\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <div\n                className=\"lists\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {this.renderLists()}\n                {provided.placeholder}\n                <div className=\"lists-item\">\n                  <CreateForm formType=\"list\" />\n                </div>\n              </div>\n            )}\n          </Droppable>\n          <Modal\n            isOpen={this.props.isModalShowing}\n            onRequestClose={this.props.hideModal}\n            contentLabel=\"onRequestClose Example\"\n            className=\"Modal\"\n            overlayClassName=\"Overlay\"\n          >\n            <CardModal />\n          </Modal>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { lists: state.lists, isModalShowing: state.modal.isShowing };\n};\nexport default connect(\n  mapStateToProps,\n  { hideModal, editCardPosition }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\n\nimport App from \"./components/App\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}